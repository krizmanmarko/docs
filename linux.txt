https://stackoverflow.com/questions/36639607/how-exactly-do-kernel-virtual-addresses-get-translated-to-physical-ram/36640733#36640733
My understanding is that we only (page) fault in kernel-space for the vmalloc & exception fixups (like copy_to|from_user). Any other fault in kernel-mode is a bug and an Oops occurs.

arch/riscv/include/asm/page.h: unmodified: line 30 of 191 [15%]
/*
 * PAGE_OFFSET -- the first address of the first page of memory.
 * When not using MMU this corresponds to the first free page in
 * physical memory (aligned on a page boundary).
 */

A device is simply any data structure that contains an embedded `struct device`,
no more and no less.

--- clear up cache (/proc/sys/vm/drop_caches)
free && sync && echo 3 > /proc/sys/vm/drop_caches && free

--- links

ln <file> <link_to_file>
soft link
	- creates new inode
	- if original file is moved the link is broken
	- basically a shortcut to some path
hard link
	- uses the original inode
	- basically file is duplicated to 2 distinct paths


--- sysfs
-- /sys/devices
https://lwn.net/Articles/646617/
-- class, bus description
https://lwn.net/Articles/645810/

/sys/dev
	int fd = open("/dev/sda1");
	fstat(fd,...); // returns which type [block, char] and major, minor nums

/sys/class, /sys/bus, /sys/block -> at some point should become /sys/subsystem
	links to directories /sys/devices, exported via different hierarchy
/sys/block: links for disks and partitions

/sys/devices -> all device directory links lead here
	actually shows how the device is physically connected to the system
/sys/devices/virtual
	When there is no physical device, or it is not currently represented
	on any sort of bus, devices are organized into /sys/devices/virtual

device properties (can be viewed in device directory)
https://docs.kernel.org/admin-guide/sysfs-rules.html
	- devpath (/devices/...)
	- kernel name: last element in devpath (sda, tty, 0000:00:1f.2, ...)
	- subsystem: subsystem link last element (block, tty, pci, ...)
	- driver: driver link last element (usb)
	- attributes: other files in device directory

	each device directory has a link to subsystem [class/..., bus/...]
	uevent contains type of device

devfs

procfs
every single file (even links, sockets...) have an inode number (unique integer), use ls -i (possibly -L to dereference links)
/proc/pid/fd -> also contains sockets (with inode number that is used in /proc/net/tcp)
finding process behind open port using /proc (https://unix.stackexchange.com/questions/226276/read-proc-to-know-if-a-process-has-opened-a-port)
port = 1337 -> convert to 4digit hex 0539 (the same format used in /proc/net/tcp)
grep 0539 /proc/net/tcp | awk '{print $10}' # prints inode number
using the inode number i.e. 224566
for (every pid)
do
	ls -l /proc/$pid/fd | grep 224566
done
